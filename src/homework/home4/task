1.  Написать класс Человек, у которого есть поле "питомец". Питомцы бывают 3х видов:
Котик, Собачка и Рыбка. Каждый питомец умеет играть, но делают они это по-разному.
Котик мяукает, Собака лает и прыгает, Рыбка плавает по кругу.
Описать у человека метод, который позволяет играть со своим питомцем, и метод, который позволяет играть с любым питомцем.

2.  Создать класс Person с полем String name.
В другом классе создать поле List<Person> persons.
Записать в список 5 экземпляров класса Person.
Создать метод, который будет принимать параметр String name и возвращать из списка объект Person
с таким именем (либо null, если человека с таким именем нет в списке).
После этого вызвать у получившегося объекта метод toString().

3. Написать метод, который принимает строку и возвращает Map<Character, Integer> - количество каждого символа, который встречается в строке.

Доп1. Большие и маленькие буквы считать одинаковыми.
Считать знаки препинания [.,!-:?{}()*+=] одним и тем же символом, то есть считать их общее количество.

Доп2. Предусмотреть параметр метода, который отвечает за порядок вывода. Например:
Map<Character, Integer> calcCharFreq(String inputString, boolean order)
order – true – выводим в порядке увеличения частоты.
order – false – выводим в порядке уменьшения частоты.

4. Есть 3 класса – Прямоугольник, Квадрат, Круг (создать их).
Дополнить классы необходимыми полями и создать на их основе иерархию классов
(то есть кто-то от кого-то должен наследоваться, при необходимости можно создавать дополнительные классы и интерфейсы).
Создать класс CalculationUtils, в котором должны быть методы, принимающие любую фигуру и возвращающие ее а) площадь б) периметр.

5.  Добрый парень Василий живет в общаге и решил сходить в магазин. Он собирает у желающих список продуктов,
которые им нужны, чтобы купить все разом. Нужно помочь ему в этом, написав программу,
которая будет а) хранить кто и что заказал, б) составит для Василия список сколько и каких продуктов надо купить в общем.

Задание: Реализовать класс СписокПокупок, в котором должны содержаться данные о том, кто и какие продукты заказал у Василия.
(Подсказка, здесь подойдет конструкция вида Map<String, List<String>>, где ключами будут имена людей,
а значениями - списки из названий продуктов, которые они заказали).
Класс должен содержать метод добавления нового заказа и метод, который выводит на консоль
количество каждого продукта во всем списке покупок, например:
bread: 4
butter: 2
pelmeni: 5
beer: 25
